name: Build and Deploy to GKE

on:
  push:
    branches:
    - "main"
    tags:
    - "*"
  release:
    types: ["published","released","created"]
  delete: 
    branches:
    - "*"

env:
  FRONTEND_IMAGE: todo-app
  BACKEND_IMAGE: todo-backend
  BROADCASTER_IMAGE: todo-broadcaster
  BRANCH: ${{ github.ref_name }}
  
jobs:
  staging-build-publish-deploy:
    name: Staging - Build, Publish and Deploy
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - id: "auth"
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GKE_SA_KEY }}
      
    - name: 'Set up Cloud SDK'
      uses: google-github-actions/setup-gcloud@v2

    - name: 'Use gcloud CLI'
      run: gcloud info

    - name: Docker configuration
      run: gcloud --quiet auth configure-docker
      
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
        project_id: ${{ secrets.PROJECT_ID }}

    - name: Build Backend Docker image
      run: |-
        docker build \
          --tag "gcr.io/${{ env.GCP_PROJECT }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}" \
          "./${{ env.BACKEND_IMAGE }}"

    - name: Build Broadcaster Docker image
      run: |-
        docker build \
          --tag "gcr.io/${{ env.GCP_PROJECT }}/${{ env.BROADCASTER_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}" \
          "./${{ env.BROADCASTER_IMAGE }}"
  
    - name: Build Frontend Docker image
      run: |-
        docker build \
          --tag "gcr.io/${{ env.GCP_PROJECT }}/${{ env.FRONTEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}" \
          "./${{ env.FRONTEND_IMAGE }}"
  
    - name: Publish Backend Docker image
      run: |-
        docker push "gcr.io/${{ env.GCP_PROJECT }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}" 

    - name: Publish Broadcaster Docker image
      run: |-
        docker push "gcr.io/${{ env.GCP_PROJECT }}/${{ env.BROADCASTER_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}" 

    - name: Publish Frontend Docker image
      run: |-
        docker push "gcr.io/${{ env.GCP_PROJECT }}/${{ env.FRONTEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}"
      
    - name: Install Kustomize
      run: |-
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        mv kustomize /usr/local/bin/

    - name: Set up Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
    
    - name: Pull repository
      run: |
        git fetch origin
        git checkout main

    - name: Deploy
      run: |-
        cd "./manifests/overlays/staging"

        kustomize edit set image ${{ env.FRONTEND_IMAGE }}="gcr.io/${{ env.GCP_PROJECT }}/${{ env.FRONTEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}" 
        kustomize edit set image ${{ env.BACKEND_IMAGE }}="gcr.io/${{ env.GCP_PROJECT }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}" 
        kustomize edit set image ${{ env.BROADCASTER_IMAGE }}="gcr.io/${{ env.GCP_PROJECT }}/${{ env.BROADCASTER_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}" 
        cat kustomization.yaml

    - name: Remove sensitive files
      run: |
        rm -rf gha* 
        rm -f gha-creds-*.json

    - name: Commit changes
      run: |
        git add -A
        git commit -m "Automated update by GitHub Actions [skip ci]"
      continue-on-error: true

    - name: Push changes
      run: |
        git pull --rebase origin main
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  production-build-publish-deploy:
    name: Production - Build, Publish and Deploy
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - id: "auth"
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GKE_SA_KEY }}
      
    - name: 'Set up Cloud SDK'
      uses: google-github-actions/setup-gcloud@v2

    - name: 'Use gcloud CLI'
      run: gcloud info

    - name: Docker configuration
      run: gcloud --quiet auth configure-docker
      
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
        project_id: ${{ secrets.PROJECT_ID }}

    - name: Build Backend Docker image
      run: |-
        docker build \
          --tag "gcr.io/${{ env.GCP_PROJECT }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}" \
          "./${{ env.BACKEND_IMAGE }}"

    - name: Build Broadcaster Docker image
      run: |-
        docker build \
          --tag "gcr.io/${{ env.GCP_PROJECT }}/${{ env.BROADCASTER_IMAGE }}:${{ env.BRANCH }}" \
          "./${{ env.BROADCASTER_IMAGE }}"
  
    - name: Build Frontend Docker image
      run: |-
        docker build \
          --tag "gcr.io/${{ env.GCP_PROJECT }}/${{ env.FRONTEND_IMAGE }}:${{ env.BRANCH }}" \
          "./${{ env.FRONTEND_IMAGE }}"

    - name: Publish Backend Docker image
      run: |-
        docker push "gcr.io/${{ env.GCP_PROJECT }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}"

    - name: Publish Broadcaster Docker image
      run: |-
        docker push "gcr.io/${{ env.GCP_PROJECT }}/${{ env.BROADCASTER_IMAGE }}:${{ env.BRANCH }}"

    - name: Publish Frontend Docker image
      run: |-
        docker push "gcr.io/${{ env.GCP_PROJECT }}/${{ env.FRONTEND_IMAGE }}:${{ env.BRANCH }}"
      
    - name: Install Kustomize
      run: |-
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        mv kustomize /usr/local/bin/

    - name: Set up Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
    
    - name: Pull repository
      run: |
        git fetch origin
        git checkout main

    - name: Deploy
      run: |-
        cd "./manifests/overlays/production"

        kustomize edit set image ${{ env.FRONTEND_IMAGE }}="gcr.io/${{ env.GCP_PROJECT }}/${{ env.FRONTEND_IMAGE }}:${{ env.BRANCH }}"
        kustomize edit set image ${{ env.BACKEND_IMAGE }}="gcr.io/${{ env.GCP_PROJECT }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}"
        kustomize edit set image ${{ env.BROADCASTER_IMAGE }}="gcr.io/${{ env.GCP_PROJECT }}/${{ env.BROADCASTER_IMAGE }}:${{ env.BRANCH }}"
        kustomize build . 

    - name: Remove sensitive files
      run: |
        rm -rf gha* 
        rm -f gha-creds-*.json

    - name: Commit changes
      run: |
        git add -A
        git commit -m "Automated update by GitHub Actions [skip ci]"
      continue-on-error: true

    - name: Push changes
      run: |
        git pull --rebase origin main
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  delete-environment:
    name: Delete env
    if: github.event_name == 'delete'
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - id: "auth"
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GKE_SA_KEY }}
      
    - name: 'Set up Cloud SDK'
      uses: google-github-actions/setup-gcloud@v2

    - name: 'Use gcloud CLI'
      run: gcloud info

    - name: Docker configuration
      run: gcloud --quiet auth configure-docker
      
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
        project_id: ${{ secrets.PROJECT_ID }}

    - name: Delete namespace
      run: |-
        NAMESPACE=${GITHUB_REF#refs/heads/}
        if [ "$NAMESPACE" != "main" ]; then
          kubectl delete namespace $NAMESPACE
        fi
    
