name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster  
  GKE_ZONE: europe-west4-c 
  FRONTEND_IMAGE: todo_app
  FRONTEND_SERVICE: todo_app
  BACKEND_IMAGE: todo_backend
  BACKEND_SERVICE: todo_backend
  BRANCH: ${{ github.ref_name }}
  
jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
      
    - name: 'Set up Cloud SDK'
      uses: google-github-actions/setup-gcloud@v2

    - name: 'Use gcloud CLI'
      run: gcloud info

    - name: Docker configuration
      run: gcloud --quiet auth configure-docker
      
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        project_ID: ${{ env.PROJECT_ID }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$BRANCH-$GITHUB_SHA" \
          "./Project v.1.4/$FRONTEND_IMAGE" 
        docker build \
          --tag "$gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$BRANCH-$GITHUB_SHA" \
          "./Project v.1.4/$BACKEND_IMAGE"
  
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$BRANCH-$GITHUB_SHA" 
        docker push "$gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$BRANCH-$GITHUB_SHA"
      
    # Set up kustomize
    - name: Set up Kustomize
      uses: imranismail/setup-kustomize@v2.1
    
    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        ./kustomize edit set image PROJECT_APP/IMAGE="$gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$BRANCH-$GITHUB_SHA" 
        ./kustomize edit set image PROJECT_BACKEND/IMAGE="$gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$BRANCH-$GITHUB_SHA" 
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment $FRONTEND_SERVICE
        kubectl rollout status deployment $BACKEND_SERVICE
        kubectl get services -o wide
